# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/chitrarani/serverless-demo
    docker:
      # specify the version you desire here
      - image: chitrar/ruby2.5-node10-postgresql10:firsttry

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:10.4 # database image
        environment: # environment variables for database
          POSTGRES_USER: hood-test-user
          POSTGRES_DB: hood_test
          POSTGRES_PASSWORD: ""

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install Serverless CLI and dependencies
          command: |
            npm install
            npm i -g serverless

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Run rspec in parallel
      - type: shell
        command: |
          bundle exec rspec

      - run:
          name: install awscli
          command: yum update && yum install -y awscli groff

      - run:
          name: configure awscli
          command: |
            mkdir ~/.aws
            cat >~/.aws/config <<EOL
            [default]
            region = ${AWS_REGION}
            output = json
            EOL
            cat >~/.aws/credentials <<EOL
            [default]
            aws_access_key_id = ${AWS_DEV_ID}
            aws_secret_access_key = ${AWS_DEV_KEY}
            [devAccount]
            aws_access_key_id = ${AWS_DEV_ID}
            aws_secret_access_key = ${AWS_DEV_KEY}
            [prodAccount]
            aws_access_key_id = ${AWS_PROD_ID}
            aws_secret_access_key = ${AWS_PROD_KEY}
            EOL

      - run:
          name: Deploy application
          command: sls deploy --stage dev --profile devAccount

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}




